<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[推荐系统CTR实战——Attentional Factorization Machines(AFM)]]></title>
    <url>%2F2018%2F11%2F10%2F%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9FCTR%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94Attentional-Factorization-Machines-AFM%2F</url>
    <content type="text"><![CDATA[References:https://zhuanlan.zhihu.com/p/38517948]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>CTR</tag>
        <tag>Recommender system</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推荐系统CTR实战——Neural Factorization Machines(NFM)]]></title>
    <url>%2F2018%2F11%2F10%2F%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9FCTR%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94Neural-Factorization-Machines-NFM%2F</url>
    <content type="text"></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>CTR</tag>
        <tag>Recommender system</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推荐系统CTR实战——Product-based Neural Network(PNN)]]></title>
    <url>%2F2018%2F11%2F10%2F%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9FCTR%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94Product-based-Neural-Network-PNN%2F</url>
    <content type="text"></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>CTR</tag>
        <tag>Recommender system</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推荐系统CTR实战——GBDT+LR]]></title>
    <url>%2F2018%2F11%2F10%2F%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9FCTR%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94GBDT-LR%2F</url>
    <content type="text"></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>CTR</tag>
        <tag>Recommender system</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推荐系统CTR实战——xDeepFM]]></title>
    <url>%2F2018%2F11%2F10%2F%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9FCTR%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94xDeepFM%2F</url>
    <content type="text"></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>CTR</tag>
        <tag>Recommender system</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推荐系统CTR实战——Wide & Deep]]></title>
    <url>%2F2018%2F11%2F10%2F%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9FCTR%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94Wide-Deep%2F</url>
    <content type="text"></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>CTR</tag>
        <tag>Recommender system</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推荐系统CTR实战——FFM]]></title>
    <url>%2F2018%2F11%2F10%2F%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9FCTR%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94FFM%2F</url>
    <content type="text"></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>CTR</tag>
        <tag>Recommender system</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推荐系统CTR实战——FM]]></title>
    <url>%2F2018%2F11%2F10%2F%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9FCTR%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94FM%2F</url>
    <content type="text"></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>CTR</tag>
        <tag>Recommender system</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推荐系统CTR实战——DeepFM]]></title>
    <url>%2F2018%2F11%2F10%2F%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9FCTR%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94DeepFM%2F</url>
    <content type="text"></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>CTR</tag>
        <tag>Recommender system</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推荐系统CTR实战——Deep Interest Network]]></title>
    <url>%2F2018%2F11%2F10%2F%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9FCTR%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94Deep-Interest-Network%2F</url>
    <content type="text"></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>CTR</tag>
        <tag>Recommender system</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推荐系统CTR实战——Deep & Cross]]></title>
    <url>%2F2018%2F11%2F10%2F%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9FCTR%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94Deep-Cross%2F</url>
    <content type="text"></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>CTR</tag>
        <tag>Recommender system</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【剑指Offer】24. 二叉搜索树的后序遍历]]></title>
    <url>%2F2018%2F11%2F09%2F%E3%80%90%E5%89%91%E6%8C%87Offer%E3%80%9124-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%2F</url>
    <content type="text"><![CDATA[题目描述：输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。如果是则输出Yes,否则输出No。假设输入的数组的任意两个数字都互不相同。 思路：1、序列的的最后一个数字是根节点2、二叉搜索树左子树的节点都比根节点小，右子树的节点都比根节点大。 C++递归与非递归实现代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;set&gt;using namespace std;class Solution&#123; private: //参数为引用，不为值传递是为了防止拷贝构造函数的无限递归，最终导致栈溢出。 bool judge(vector&lt;int&gt; &amp;sequence, int left, int right) &#123; if (left == right) return true; int mid = left; while (sequence[mid] &lt; sequence[right] &amp;&amp; mid &lt; right) &#123; mid++; &#125; int tmp = mid; while (sequence[tmp] &gt; sequence[right] &amp;&amp; tmp &lt; right) &#123; tmp++; &#125; if (tmp &lt; right) &#123; return false; &#125; if (mid == left || mid == right) &#123; return judge(sequence, left, right - 1); &#125; else &#123; return judge(sequence, left, mid - 1) &amp;&amp; judge(sequence, mid, right - 1); &#125; &#125; public: bool VerifySquenceOfBST(vector&lt;int&gt; sequence) &#123; int size = sequence.size(); if (0 == size) return false; int i = 0; while (--size) &#123; while (sequence[i] &lt; sequence[size]) &#123; i++; &#125; //while (sequence[i++] &lt; sequence[size]); //while (sequence[i++] &gt; sequence[size]); while (sequence[i] &gt; sequence[size]) &#123; i++; &#125; if (i &lt; size) return false; i = 0; &#125; return true; &#125; bool VerifySquenceOfBSTRecursize(vector&lt;int&gt; sequence) &#123; int length = sequence.size(); if (length == 0) return false; return judge(sequence, 0, length - 1); &#125;&#125;;int main()&#123; vector&lt;int&gt; tree1&#123;5, 7, 6, 9, 11, 10, 8&#125;; vector&lt;int&gt; tree2&#123;4, 8, 6, 12, 16, 14, 10&#125;; vector&lt;int&gt; tree3&#123;2, 1, 7, 4, 6, 5, 3&#125;; Solution solution = Solution(); bool tmp = solution.VerifySquenceOfBST(tree3); cout &lt;&lt; boolalpha &lt;&lt; tmp &lt;&lt; endl; return 0;&#125;]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello-Hexo]]></title>
    <url>%2F2018%2F11%2F08%2FHello-Hexo%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is a guide post to use Hexo. Check documentation formore info. If you get any problems when using Hexo, you can find the answer introubleshooting or you can ask me onGitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment How to use Hexo and deploy to GitHub Pages https://github.com/hexojs/hexo https://hexo.io/docs/ 1. Install Hexo123456789101112$ sudo npm install -g hexo-cli$ hexo -vhexo-cli: 0.1.9os: Darwin 14.3.0 darwin x64http_parser: 2.3node: 0.12.7v8: 3.28.71.19uv: 1.6.1zlib: 1.2.8modules: 14openssl: 1.0.1p 2. Create a project for your GitHub Pages1234567$ hexo init fuhailin.github.ioINFO Copying data to ~/***/fuhailin.github.ioINFO You are almost done! Don&apos;t forget to run &apos;npm install&apos; before you start blogging with Hexo!$ cd fuhailin.github.io$ npm install 3. Run a test server for your page on Mac12$ hexo serverINFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop. 4. Set information for your new bloghttps://hexo.io/docs/configuration.html1234567891011121314151617$ vi _config.yml~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~# Sitetitle: fuhailin&apos;s notesubtitle:description: fuhailin&apos;s personal blogauthor: fuhailinlanguage:timezone: Japan# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: http://fuhailin.github.io/root: /permalink: :year/:month/:day/:title/permalink_defaults: 5. Set information to use Githttps://github.com/hexojs/hexo-deployer-git12345678910$ npm install hexo-deployer-git --save$ vi _config.yml~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:fuhailin/fuhailin.github.io.git branch: master 6. Set “watch” before starting your work“watch” command can monitor your files.https://hexo.io/docs/generating.html1$ hexo generate --watch 7. Create a new post file12$ hexo new first-postINFO Created: ~/***/fuhailin.github.io/source/_posts/first-post.md 8. Edit the above file with Markdown or Hexo’s HelperHexo’s Helperhttps://hexo.io/docs/helpers.htmlI use Atom with “shift + control + m” when I use Markdown :-)https://atom.io/ 9. Delete “source/_posts/hello-world.md”It’s not necessary to deploy. 10. Deploy your new blog!!https://hexo.io/docs/deployment.html12$ hexo clean$ hexo deploy After writting the above command, you can see your new blog on GitHub Pages.http://**.github.io/ 11. Change your blog themehttps://github.com/hexojs/hexo/wiki/Themes1234567891011121314151617181920For instance, How to use the following theme.https://hexo.io/hexo-theme-light/## Install it$ cd fuhailin.github.io$ git clone git://github.com/tommy351/hexo-theme-light.git themes/light## Update the above files$ themes/light$ git pull## Set information to use the theme$ cd fuhailin.github.io$ vi _config.yml~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~# Extensions## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/theme: light 12. Create a new page filehttps://hexo.io/docs/writing.html123456$ hexo new page aboutmeINFO Created: ~/***/fuhailin.github.io/source/aboutme/index.md$ cd source/aboutme/$ vi index.md 13. Use “Read More”Write &lt;!-- more --&gt; in your articles. 14. Use Pluginshttps://github.com/hexojs/hexo/wiki/Plugins 为blog添加评论区hexo添加gitment评论系统：http://kuring.me/post/gitment/ 给 Github 添加 README默认情况下，Github中每一个项目，我们希望有一份 README.md 的文件来作为项目的说明，但是我们在项目根目录下的 blog\source目录下创建一份 README.md 文件，写好说明介绍，部署的时候，这个 README.md 会被 hexo 解析掉，而不会被解析到 Github 中去的。正确的解决方法其实很简单：把 README.md 文件的后缀名改成 “MDOWN” 然后扔到blog/source文件夹下即可，这样 hexo 不会解析，Github 也会将其作为 MD文件解析。https://neveryu.github.io/2016/09/30/hexo-next-two/ 添加Fork Me on github书签https://www.jianshu.com/p/2002f4881353 显示每篇文章的更新时间最新版本的next主题已经加入了配置博文更新时间的代码。在主题配置文件中，post_meta中有一个updated_at属性，如果enable就是开启这个功能。所以我们在博文开头开头部分加入updated定义就行： post Markdown code 效果 在文章中插入图片Hexo博客搭建之在文章中插入图片 绝对路径本地引用当Hexo项目中只用到少量图片时，可以将图片统一放在source/images文件夹中，通过markdown语法访问它们。1![](/images/image.jpg) 相对路径本地引用图片除了可以放在统一的images文件夹中，还可以放在文章自己的目录中。文章的目录可以通过站点配置文件_config.yml来生成。post_asset_folder: true将_config.yml文件中的配置项post_asset_folder设为true后，执行命令$ hexo new post_name，在source/_posts中会生成文章post_name.md和同名文件夹post_name。将图片资源放在post_name中，文章就可以使用相对路径引用图片资源了。1![](image.jpg) 如果希望图片在文章和首页中同时显示，可以使用标签插件语法。1&#123;% asset_img image.jpg This is an image %&#125; Good References: Hexo+NexT 打造一个炫酷博客：https://juejin.im/post/5bcd2d395188255c3b7dc1db]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
